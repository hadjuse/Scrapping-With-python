import requests
import pandas as pd
url = "https://www.sunglasshut.com/wcs/resources/plp/13801/byCategoryId/3074457345626915828"
for x in range(1, 7):
    querystring = {"isProductNeeded":"true","isChanelCategory":"false","pageSize":"100","orderBy":["default","default","default"],"responseFormat":"json","currency":"EUR","viewTaskName":"CategoryDisplayView","storeId":"13801","DM_PersistentCookieCreated":"true","pageView":"image","gclid":"EAIaIQobChMIhYfNlfvu-QIVhu5RCh2w0AfOEAAYASAAEgI2uPD_BwE","catalogId":"20603","top":"Y","beginIndex":"0","currentPage":f"{x}","langId":"-2","gclsrc":"aw.ds","facet":["ads_f70033_ntk_cs:\"TRUE\"","ads_f70033_ntk_cs%3A%22TRUE%22"],"categoryId":"3074457345626915828","cid":"PM-SGA_300419-1.FR-SGH-FR-B-BrandCore-Exact_Pure Brand_Core_Exact_sunglasshut"}

    payload = ""
    headers = {
    "cookie": "aka-zp=; bm_sv=FBE3CF412C61735457AA4CECC628F131~YAAQDXsQYMMneseCAQAAs5eY7xCdyggKLPqNmA1thSnXBdYoOzR0FyqY3sNxEYtwtwv63C9UTsKCArwo8uAClwerXOXjhZp%2B8vw9U4CILK7Fq%2BPaeMicWHKdzbyd3Gz4KQC22WCGDUbuYmZEAM1ftXN31dslCmE7WANAB4xsRpFoheRmdWrP2ipOAq%2BCpIuESPmQ110cDLPsNIpM0BQcvJXKKjD3quYlP4pNjjSbRfzute6GVM6Bs2UatA66xGC7wl3CrW4%3D~1",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:104.0) Gecko/20100101 Firefox/104.0",
    "Accept": "application/json, text/plain, */*",
    "Accept-Language": "fr,fr-FR;q=0.8,en-US;q=0.5,en;q=0.3",
    "Accept-Encoding": "gzip, deflate, br",
    "Connection": "keep-alive",
    "Referer": "https://www.sunglasshut.com/fr/cr%C3%A9ateurs-lunettes-de-soleil?facet=ads_f70033_ntk_cs%253A%2522TRUE%2522&cid=PM-SGA_300419-1.FR-SGH-FR-B-BrandCore-Exact_Pure%20Brand_Core_Exact_sunglasshut&gclid=EAIaIQobChMIhYfNlfvu-QIVhu5RCh2w0AfOEAAYASAAEgI2uPD_BwE&gclsrc=aw.ds&currentPage=2",
    "Cookie": "aka-cc=FR; aka-ct=PARIS; aka-zp=; ak_bmsc=B83D12B7DD53C0AA9520BE3FC8EE383F~000000000000000000000000000000~YAAQT+x7XK4zssiCAQAABQ2K7xC6L/4thrJZ1WyRzwzjx91i0ukuloShpM6xelz+7IUuGLE8X6/9CTXi1a2l2S68CuV6nyiHQ52c+WOMmDL9AwTOweOW2Z62foWwvo+igIZabsygi7vXkkG6TtboLm3oH5BNr7XfnxFqTDc0xLS8QKnHas5qPguVO6beGjSoVuVVkN2T0vq3BDcgNi5PknH6kuCiBTvkx+jSovFW8o24V1tuCTGe6rySpMgupWinuAg5UGkDScf32nrAY6i2x0hsCwwFcIHBgp6+t5WyURYF9nYnbgPJbY6gjXV/sb48+cfHaEwE0UiMig6kv8WCHYcEGWIRjzT5A5Qki21UDIwRFnY4loIZUzdlpLErtOnN8Gbvqt/QEKtaJx+vt/hL6b7zgpS1I2WDScKB8HXaeayoOX383tL1jbRi4qyROV574LHucB8x9R6IKaJa1g4rEhASTbkvt8DBLwUVfGQ7ADQvh3Ca4NB5EOB9Qe/IURFkkN48viIlbCw5OtQSrwwpRN/bKiLivejr; SGPF=39n2RWpt_zSsxORBSxaEtz0yK4O7VhVjwWfQ2ecz1V6dpTsQOT9i4Ow; forterToken=e8871c0b01e949d0b971a59ee5cd821b_1661876563181__UDF4_6; dtCookie=-5`; rxVisitor=16618761774169GKE45UV98T1A7CVI8E45P2LAFOV42I1; dtPC=-5`-0e2; rxvt=1661878363057|1661876177417; dtSa=-; dtLatC=19; sgh-desktop-facet-state-plp=categoryid:undefined|gender:true|brands:partial|polarized:true|price:true|frame-shape:partial|color:true|face-shape:false|fit:false|materials:false|lens-treatment:false; sgh-desktop-facet-state-search=; ftr_ncd=6; __wid=376387809; tealium_data_tags_adobeAnalytics_trafficSourceCid_lastFirst=PM-SGA_300419-1.FR-SGH-FR-B-BrandCore-Exact_Pure%20Brand_Core_Exact_sunglasshut; tealium_data_tags_adobeAnalytics_trafficSourceCid_thisSession=PM-SGA_300419-1.FR-SGH-FR-B-BrandCore-Exact_Pure%20Brand_Core_Exact_sunglasshut; tealium_data2track_Tags_AdobeAnalytics_TrafficSourceJid_ThisHit=208302SEM; tealium_data_tags_adobeAnalytics_trafficSourceJid_stackingInSession=208301SEM-208302SEM; tealium_data2track_Tags_AdobeAnalytics_TrafficSourceMid_ThisHit=PM-SGA_300419-1.FR-SGH-FR-B-BrandCore-Exact_Pure%20Brand_Core_Exact_sunglasshut; tealium_data_tags_adobeAnalytics_trafficSourceMid_thisSession=PM-SGA_300419-1.FR-SGH-FR-B-BrandCore-Exact_Pure%20Brand_Core_Exact_sunglasshut; utag_main=v_id:0182ef8a0d790012e25760f633c505050010a00d00bd0`n:1`e:12`s:0`t:1661878364078`:1661876178297%3Bexp-session`n:2%3Bexp-session`:sunglasshut.com`:1`:2%3Bexp-session`:eu-central-1%3Bexp-session; tealium_data_session_timeStamp=1661876178313; userToken=undefined; AMCV_125138B3527845350A490D4C%40AdobeOrg=-1303530583%7CMCIDTS%7C19235%7CMCMID%7C36388497909895279471433707808086687520%7CMCAAMLH-1662480978%7C6%7CMCAAMB-1662480978%7C6G1ynYcLPuiQxYZrsz_pkqfLG9yMXBpb2zX5dvJdYQJzPXImdj0y%7CMCOPTOUT-1661883378s%7CNONE%7CMCAID%7CNONE%7CMCSYNCSOP%7C411-19242%7CvVersion%7C3.3.0; AMCVS_125138B3527845350A490D4C%40AdobeOrg=1; s_ecid=MCMID%7C36388497909895279471433707808086687520; mt.v=2.1374303725.1661876178981; bm_sv=FBE3CF412C61735457AA4CECC628F131~YAAQT+x7XDGXssiCAQAAoe+P7xAVIqlkL+560vTV9RNfrpureDbR8iqW0FzImEdDuUJHKKmcZ9Ff8mJLTY07jFnQqqOT4OWB7YiOYtkyD/56FvNbvEd/BwfGh23AZfdmWguWVHjmwB5slQicFtQyKA3oWsHxzfDsY7CP04rt1ymWzJyyZzQiHNpTKXGA+zPaHxMbunQTmZ+Yn2uEUNqPe3mRZLRB0ISft27XfmgSlN14jvy0FSpf/mp/8bW9G8+zg0zFMO4=~1; _cs_mk=0.9666886930161006_1661876183851; s_cc=true; CONSENTMGR=consent:true%7Cts:1661876333677; s_sq=%5B%5BB%5D%5D; __utma=110589831.877100617.1661876334.1661876334.1661876334.1; __utmb=110589831.2.10.1661876334; __utmc=110589831; __utmz=110589831.1661876334.1.1.utmcsr=google|utmgclid=EAIaIQobChMIhYfNlfvu-QIVhu5RCh2w0AfOEAAYASAAEgI2uPD_BwE|utmgclsrc=aw.ds|utmccn=(not%20set)|utmcmd=(not%20set)|utmctr=(not%20provided); _gac_UA-41744720-1=1.1661876334.EAIaIQobChMIhYfNlfvu-QIVhu5RCh2w0AfOEAAYASAAEgI2uPD_BwE; __utmt=1; _gcl_aw=GCL.1661876343.EAIaIQobChMIhYfNlfvu-QIVhu5RCh2w0AfOEAAYASAAEgI2uPD_BwE; _gcl_dc=GCL.1661876343.EAIaIQobChMIhYfNlfvu-QIVhu5RCh2w0AfOEAAYASAAEgI2uPD_BwE; _gcl_au=1.1.1406917340.1661876334; criteo_dedup=other; _ga_6P80B86QTY=GS1.1.1661876334.1.1.1661876562.60.0.0; _ga=GA1.1.313835227.1661876334; _fbp=fb.1.1661876334653.617944262; _tt_enable_cookie=1; _ttp=0d574dd1-2bb0-4260-8283-64c2f70d8108; cto_bundle=8xvQi19KSFlNdFEwJTJCQnp1aUZobnRLRnVWdmJLQ1JZOEtqYklhZHNsNHp1UlJIMjM0NG1CQ0JQQmR6bmtUOUVzSmd4M3FjY3dMZzVMWmVmRjdvRU55cTl4ZUJ1d3NRJTJGZDBFdiUyRm9jRkxUajh6UU9ISFdCdXRaZnFUc3BCVTRaVXBuZk5UaGg4TzBxNFVjOWZ3a3hyJTJCSWc0aWlwdyUzRCUzRA",
    "Sec-Fetch-Dest": "empty",
    "Sec-Fetch-Mode": "cors",
    "Sec-Fetch-Site": "same-origin",
    "TE": "trailers"
    }

    r = requests.request("GET", url, headers=headers, params=querystring)
    product = []
    data = r.json()
    for p in data['plpView']['products']['products']['product']:
        product.append(p)
df = pd.json_normalize(product)
df.to_csv('result.csv', encoding='utf-8')